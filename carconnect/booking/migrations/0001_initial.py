# Generated by Django 3.2.9 on 2023-10-26 13:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False, verbose_name='Email Address')),
                ('phone', models.BigIntegerField(default=976934295)),
                ('pincode', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity', models.PositiveSmallIntegerField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=6)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Plug',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charger_type', models.CharField(choices=[('IEC-60309', 'IEC-60309'), ('IEC-62196(AC type 2)', 'IEC-62196(AC type 2)'), ('3 Pin Connector(15 Amp)', '3 Pin Connector(15 Amp)'), ('CSS connector', 'CSS connector'), ('GBT connector', 'GBT connector'), ('CHAdeMO connector', 'CHAdeMO connector')], default='IEC-62196(AC type 2)', max_length=25)),
                ('charging_speed', models.FloatField(default=0)),
                ('charging_rate', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_name', models.CharField(default='EV Station', max_length=100)),
                ('phone_no', models.IntegerField(default=0)),
                ('location', models.TextField(default=None, max_length=100)),
                ('city', models.CharField(default='Mumbai', max_length=50)),
                ('working_hours', models.CharField(default='9:00 am to 11:00 pm', max_length=20)),
                ('star_rating', models.CharField(max_length=2, null=True)),
                ('active_status', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_no', models.CharField(max_length=11, unique=True)),
                ('vehicle_identification_no', models.CharField(max_length=17, unique=True)),
                ('vehicle_model', models.CharField(max_length=30)),
                ('plug_type', models.CharField(choices=[('IEC-60309', 'IEC-60309'), ('IEC-62196(AC type 2)', 'IEC-62196(AC type 2)'), ('3 Pin Connector(15 Amp)', '3 Pin Connector(15 Amp)'), ('CSS connector', 'CSS connector'), ('GBT connector', 'GBT connector'), ('CHAdeMO connector', 'CHAdeMO connector')], default='IEC-62196(AC type 2)', max_length=25)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='User', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('booking_status', models.BooleanField(default=False)),
                ('plug', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Plug', to='booking.plug')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.CharField(choices=[('1', 1), ('2', 2), ('3', 3), ('4', 4), ('5', 5)], default='3', max_length=10)),
                ('feedback', models.TextField(blank=True, max_length=100)),
                ('about', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='booking.station')),
                ('written_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='plug',
            name='station_name',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='booking.station'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amt', models.DecimalField(decimal_places=2, max_digits=6)),
                ('payment_status', models.BooleanField()),
                ('payment_of', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='booking.booking')),
            ],
        ),
        migrations.AddField(
            model_name='booking',
            name='plug',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Booking_Plug', to='booking.plug'),
        ),
        migrations.AddField(
            model_name='booking',
            name='slot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Slot', to='booking.slot'),
        ),
        migrations.AddField(
            model_name='booking',
            name='station',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.station'),
        ),
    ]
